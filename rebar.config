%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
{ deps , [
    grisp ,
    % {grisp , {git , "https://github.com/GrispLasp/grisp.git" , {branch , "master"}}} ,
    % {epmd , {git , "https://github.com/erlang/epmd" , {ref , "4d1a59"}}} ,
    lager ,
    partisan ,
    lasp
]}.

%% == Erlang ==

{erl_opts , [debug_info ,
             {parse_transform , lager_transform}]}.

%% == GRiSP ==

{ grisp , [
    {otp , [
        {version , "21.0"}
    ]} ,


    {build , [
        {toolchain , [
            {directory,"/Path/To/GRiSP/grisp-software/rtems-install/rtems/5"}]} % Toolchain
    ]} ,

    {deploy , [
    % ==========
    % Linux :
    % ==========
    %     {pre_script , "rm -rf /media/<username>/GRISP/*"} ,
    %     {destination , "/media/<username>/GRISP"} ,
    %     {post_script , "umount /media/<username>/GRISP"}

    % ==========
    % Mac OS X :
    % ==========
        {pre_script, "rm -rf /Volumes/GRISP/*"},
        {destination, "/Volumes/GRISP"},
        {post_script, "diskutil unmount /Volumes/GRISP"}
    ]}
]}.

%% == Shell ==
{ shell , [
    {apps , []} ,
    {config , "./config/test.config"}
]}.

%% == Relx ==

{ relx , [
    {release , {achlys , "0.1.10"} , [
        kernel ,
        stdlib ,
        sasl ,
        grisp ,
        {epmd , none} ,
        lager ,
        partisan ,
        lasp ,
        achlys
    ]} ,
    {sys_config , "./config/sys.config"} ,
    {extended_start_script , true}
]}.

{ profiles , [{prod , [
    {relx , [
        {dev_mode , false} ,
        {include_erts , true}
    ]} ,
    {erl_opts , [
        {d , 'GRISP' , true}
    ]}
]} ,
              {test , [
                  {dev_mode , true} ,
                  {erl_opts , [
                      nowarn_export_all ,
                      debug_info ,
                      {d , 'SHELL' , true}
                  ]} ,
                  {relx , [
                      {sys_config , "./config/test.config"}
                  ]}
              ]} ,
              {lint , [
                  {plugins , [
                      {rebar3_lint , {git , "https://github.com/project-fifo/rebar3_lint.git" , {ref , "d96949b"}}}
                  ]}
              ]}
]}.

%% == Coverage ==

{cover_enabled , true}.
{cover_opts , [verbose]}.

%% == EDoc ==

{ edoc_opts , [
    {report_missing_types , true} ,
    {source_path , ["src"]} ,
    {report_missing_types , true} ,
    {todo , true} ,
    {preprocess , true} ,
    {packages , false} ,
    {subpackages , false}
]}.

%% == Dialyzer ==

{ dialyzer , [
    {warnings , [underspecs
        ,        no_return
        ,        unmatched_returns
        ,        error_handling]} ,
    {plt_prefix , "achlys"} ,
    {plt_apps , top_level_deps} ,
    {plt_extra_apps , []} ,
    {plt_location , local} ,
    {base_plt_location , global} ,
    {base_plt_prefix , "achlys"}
]}.

%% == Xref ==

{ xref , [
    {xref_warnings , true} ,
    {xref_extra_paths , []} ,
    {xref_checks , [undefined_functions
        ,           deprecated_function_calls
        ,           undefined_function_calls
        ,           deprecated_functions]}
]}.

%% == EUnit ==

{ eunit_opts , [
    verbose ,
    {report , {eunit_surefire , [
        {dir , "./log/surefire"}
    ]}
    }
]}.
