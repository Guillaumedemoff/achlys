%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
[{achlys , [
    {gc_interval, 20000},
    {streams,  #{
        pmod_nav => #{
            temperature => #{
                poll_interval => 5000,
                aggregation_trigger => 10
            },
            pressure => #{
                poll_interval => 2000,
                aggregation_trigger => 3
            }
        }
        % pmod_als => #{
        %     light => #{
        %         poll_interval => 5000,
        %         aggregation_trigger => 10
        %     }
        % }
    }}
]},

{partisan , [{partisan_peer_service_manager ,
              partisan_hyparview_peer_service_manager} ,
             {channels , [1]}
]} ,

{lasp , [{membership , false} ,
         {storage_backend , lasp_ets_storage_backend} ,
         % {mode , delta_based} ,
         {mode , state_based} ,
         {state_interval, 25000} ,
         {max_gc_counter , 5} ,
         % see https://github.com/lasp-lang/lasp/commit/a9422207e554e47495c7c488450a238274844eb9
         % {propagate_on_update, true},
         {plumtree_peer_refresh_interval , 30000} ,
         {delta_interval , 25000}
]} ,

{kernel , [
    {logger_level , debug} ,
    {logger , [{handler ,
                default ,
                logger_std_h ,
                #{level => debug ,
                  formatter => {logger_formatter , #{single_line => true}}}
               }]}
]} ,

{lager , [
    {handlers , [
        {lager_console_backend , [{level , debug}]}
    ]}
]} ,

{logger , [
    {level , debug}
]} ,

{grisp , [
    {drivers , [
        {spi , grisp_spi_drv_emu} ,
        {gpio , grisp_gpio_drv_emu} ,
        {i2c , grisp_i2c_drv_emu}
    ]} ,
    {devices , [
        {spi1 , pmod_nav}
    ]}
]}].
% {streams
%     => pmod_nav =>
%         #{temperature
%             => #{poll_interval => 5000},
%             => #{aggregation_trigger, 10}
%         },
%         #{pressure
%             => #{poll_interval => 5000},
%             => #{aggregation_trigger, 10}
%         }
%     ],
%     pmod_als =>
%         #{light
%             => #{poll_interval => 5000},
%             => #{aggregation_trigger, 10}
%         }
% }
% {sensor_data_providers,
%     #{temperature => #{ table => temp ,
%         sensor => pmod_nav ,
%         poll_interval => 5000 ,
%         aggregation_trigger => 10 },
%     pressure => #{ table => press ,
%         poll_interval => 5000 ,
%         aggregation_trigger => 10 },
%     light => #{ table => light ,
%         poll_interval => 5000 ,
%         aggregation_trigger => 10 }
%     }
% }
